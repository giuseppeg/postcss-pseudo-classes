:root {
  color: blue;
}

:host {
  color: blue;
}

:host-context(a) {
  color: blue;
}

:host([disabled]) {
  opacity: .4;
}

:host([enabled]) {
  opacity: 1;
}

a:hover, :host,
a.\:hover {
  color: blue;
}

.block .element:active,
.block .element.\:active {
  color: blue;
}

:host .block .element:active,
:host .block .element.\:active {
  color: blue;
}

/*test multiple pseudo classes on one element*/
.element:last-child:active,
.element:last-child.\:active,
.element.\:last-child:active,
.element.\:last-child.\:active {
  color:blue
}

/*test multiple pseudo classes on one element but one is blacklisted (:host)
 no useful css rule, but another pseudo class, like :nth-child could be added
 by the user.
 */
.element:host:active,
.element:host.\:active {
  color:blue
}

/*test :host (blacklisted) with modifier class on host (element)*/
.hostVariant:host .block .element:active,
.hostVariant:host .block .element.\:active {
  color: blue;
}

/*test :host (blacklisted) with modifier class on host (element)*/
:host.hostVariant .block .element:active,
:host.hostVariant .block .element.\:active {
  color: blue;
}

/*test :host (blacklisted) with id on host (element)*/
:host#specialVariantId .block .element:active,
:host#specialVariantId .block .element.\:active {
  color: blue;
}
